{"version":3,"sources":["HeadPost.jsx","TypePost.jsx","AddPostContainer.jsx","NewComment.jsx","Emoji.jsx","Post.jsx","PostContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["HeadPost","onChange","event","props","changeUser","target","value","className","id","this","Component","TypePost","state","Fragment","src","currentUser","img","alt","type","placeholder","setState","post","onClick","console","log","preventDefault","addComment","document","getElementById","reset","AddPostContainer","name","NewComment","Emoji","size","Post","toggleLike","toggleHover","isHover","moreComment","toggle","isComment","key","index","elem","date","count","PostContainer","allcomment","map","like","App","increaseLike","postId","arraylikes","e","input","newPost","moment","calendar","unshift","newcomment","user","newUser","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5cb0a5eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass HeadPost extends Component {\r\n  onChange = (event) => {\r\n    this.props.changeUser(event.target.value)\r\n  }\r\n    render() {\r\n    return (\r\n      <div className=\"headPost\">\r\n        <p className=\"header\">Create Post</p>\r\n        <select className=\"selectUser\" id=\"user\" onChange={this.onChange}>\r\n          <option className=\"value\" value=\"Dhruv\">Dhruv</option>\r\n          <option className=\"value\" value=\"Palak\">Palak</option>\r\n          <option className=\"value\"value=\"Jawad\">Jawad</option>\r\n          <option className=\"value\"value=\"Amit\">Amit</option>\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default HeadPost","import React, { Component } from \"react\";\r\nclass TypePost extends Component {\r\n  state = {};\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"typePost\">\r\n          <img\r\n            className=\"userImg\"\r\n            src={this.props.currentUser.img || 'https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg'} \r\n            alt=\"userImg\"\r\n          ></img>\r\n          <form id=\"form\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"textarea\"\r\n              placeholder=\"What's on your mind\"\r\n              onChange={event => this.setState({ post: event.target.value })}\r\n            ></textarea>\r\n          </form>\r\n        </div>\r\n        <div className=\"postButton\">\r\n              <button\r\n                className=\"postBtn\"\r\n                type=\"submit\"\r\n                onClick={event => {\r\n                  console.log(\"clicked\");\r\n                  event.preventDefault();\r\n                  this.props.addComment(this.state.post);\r\n                  document.getElementById(\"form\").reset();\r\n                }}\r\n              >\r\n                Post\r\n              </button>\r\n        </div>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypePost;\r\n","import React, { Component } from 'react';\r\nimport HeadPost from \"./HeadPost\";\r\nimport TypePost from \"./TypePost\";\r\n\r\n// import PostButton from './PostButton'\r\n\r\nclass AddPostContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: '',\r\n      name: '',\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"addPostContainer\">\r\n          <HeadPost changeUser={this.props.changeUser} />\r\n          <TypePost addComment={this.props.addComment} currentUser={this.props.currentUser}/>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AddPostContainer;\r\n","import React  from 'react';\r\nfunction NewComment(props) {return(\r\n  <div className=\"commentBox\">\r\n    <textarea className=\"otherComment\"placeholder=\"reply to them\">\r\n    </textarea>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default NewComment","import React from 'react';\r\nimport FacebookEmoji from \"react-facebook-emoji\";\r\n\r\nfunction Emoji(props) {\r\n  return (\r\n    <div className=\"extraEmoji\">\r\n            <React.Fragment>\r\n              <button>\r\n                <FacebookEmoji type=\"like\" size=\"sm\" />\r\n              </button>\r\n              <button>\r\n                <FacebookEmoji type=\"love\" size=\"sm\" />{\" \"}\r\n              </button>\r\n              <button>\r\n                <FacebookEmoji type=\"haha\" size=\"sm\" />{\" \"}\r\n              </button>\r\n              <button>\r\n                <FacebookEmoji type=\"sad\" size=\"sm\" />\r\n              </button>\r\n              <button>\r\n                <FacebookEmoji type=\"wow\" size=\"sm\" />\r\n              </button>\r\n\r\n              <button>\r\n                <FacebookEmoji type=\"angry\" size=\"sm\" />\r\n              </button>\r\n            </React.Fragment>\r\n          </div>\r\n  )\r\n}\r\n\r\nexport default Emoji","import React, { Component } from 'react';\r\nimport NewComment from \"./NewComment\"\r\nimport Emoji from \"./Emoji\"\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n      isHover:false,\r\n      isComment: false,\r\n    }\r\n  }\r\n\r\n  toggleLike = () => {\r\n\r\n  this.setState(this.toggleHover)\r\n}\r\n  toggleHover=(state)=> {\r\n    return {\r\n      isHover: !state.isHover\r\n    };\r\n  }\r\n  moreComment = () => {\r\n    this.setState(this.toggle)\r\n  }\r\n\r\n  toggle = (state) => {\r\n    return {\r\n      isComment: !state.isComment\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"post\" key={this.props.index}>\r\n    <div className=\"postHead\">\r\n      <img\r\n        src={this.props.elem.img}\r\n        alt=\"UserImage\"\r\n        className=\"postImg\"\r\n      />\r\n      <div className=\"userandtime\">\r\n        <div className=\"userName\">\r\n              <h5>{this.props.elem.name}</h5>\r\n          <i className=\"fas fa-ellipsis-h icon\"></i>\r\n        </div>\r\n        <p>{this.props.elem.date}</p>\r\n      </div>\r\n        </div>\r\n        \r\n    <div className=\"postContent\">\r\n      <p> {this.props.elem.post}</p>\r\n        </div>\r\n        {this.state.isHover && \r\n          <Emoji />\r\n        }\r\n    <div className=\"likeSection\">\r\n          <button id={this.props.elem.id}\r\n            className=\"likeBtn\"\r\n            onClick={this.toggleLike}\r\n      >\r\n        <i className=\"far fa-thumbs-up\"></i> Like {this.props.elem.count}\r\n      </button>\r\n  \r\n      <button className=\"commentBtn\" onClick={this.moreComment}>\r\n        <i className=\"far fa-comment-alt\"></i> Comment\r\n      </button>\r\n      <button className=\"shareBtn\">\r\n        <i className=\"fas fa-share\"></i> Share\r\n      </button>\r\n        </div>\r\n        { this.state.isComment && <NewComment/>}\r\n\r\n      </div>)\r\n  }\r\n}\r\n \r\nexport default Post;","import React, { Component } from \"react\";\r\nimport Post from './Post'\r\nclass PostContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.allcomment.map((elem, index) => (\r\n          <Post elem={elem} key={elem.id}index={index} allcomment={this.props.allcomment} like={this.props.like}/>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// PostContainer.propTypes = propTypes;\r\nexport default PostContainer;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddPostContainer from \"./AddPostContainer\";\nimport PostContainer from \"./PostContainer\";\nimport moment from \"moment\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // this.handleHover = this.handleHover.bind(this);\n    this.state = {\n      allcomment: [\n        {\n          name: \"Dhruv\",\n          img:\n            \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\",\n          post: \"Hello I am first here\",\n          id: 0,\n          date: moment().calendar(),\n          count: 10\n        },\n        {\n          name: \"Dhruv\",\n          img:\n            \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\",\n          post: \"Seconddddddddddddddd\",\n          id: 1,\n          date: moment().calendar(),\n          count: 8\n        },\n        {\n          name: \"Dhruv\",\n          img:\n            \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\",\n          post: \"I am third\",\n          id: 2,\n          date: moment().calendar(),\n          count: 10\n        },\n        {\n          name: \"Dhruv\",\n          img:\n            \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\",\n          post: \"Im fourth\",\n          id: 3,\n          date: moment().calendar(),\n          count: 10\n        },\n        {\n          name: \"Palak\",\n          img:\n            \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\",\n          post: \"I am fine coming last\",\n          id: 4,\n          date: moment().calendar(),\n          count: 50\n        }\n      ],\n      currentUser: {},\n      id: 5\n    };\n  }\n\n  increaseLike = postId => {\n    const arraylikes = this.state.allcomment.map(e => {\n      if (e.id === postId) {\n        e.count++;\n      }\n      return e;\n    });\n    this.setState({ allcomment: arraylikes });\n  };\n\n  addComment = input => {\n    this.setState({ id: this.state.id + 1 });\n    let newPost = {\n      name: this.state.currentUser.name,\n      img: this.state.currentUser.img,\n      post: input,\n      id: this.state.id,\n      date: moment().calendar(),\n      count: 0,\n      isHover: false\n    };\n\n    this.state.allcomment.unshift(newPost);\n    let newcomment = this.state.allcomment;\n    this.setState({ allcomment: newcomment });\n  };\n\n  changeUser = user => {\n    // let newArry = this.state.currentUser;\n    let newUser = {\n      name: user,\n      img: \"\"\n    };\n    if (newUser.name === \"Palak\") {\n      newUser.img =\n        \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\";\n    } else if (newUser.name === \"Jawad\") {\n      newUser.img =\n        \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\";\n    } else if (newUser.name === \"Dhruv\") {\n      newUser.img =\n        \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\";\n    } else if (newUser.name === \"Amit\") {\n      newUser.img =\n        \"https://www.dovercourt.org/wp-content/uploads/2019/11/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.jpg\";\n    }\n    this.setState({ currentUser: newUser });\n  };\n  // handleHover = likeid => {\n  //   const newlike =\n  //   this.state.allcomment.map(e => {\n  //     if (e.id === likeid) {\n  //       this.setState(this.toggleHover);\n  //       console.log(\"id is same\")\n  //     }\n  //   });\n  //   this.setState({allcomment:newlike})\n  // };\n\n  render() {\n    return (\n      <main>\n        <AddPostContainer\n          addComment={this.addComment}\n          changeUser={this.changeUser}\n          currentUser={this.state.currentUser}\n        />\n        <div className=\"postContainer\">\n          <PostContainer\n            allcomment={this.state.allcomment}\n            like={this.increaseLike}\n          />\n        </div>\n      </main>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}